/*
 * Support for include() and rtInclude() in Plof
 *
 *  Copyright (c) 2009  Gregor Richards
 *  
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to
 *  deal in the Software without restriction, including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 *  sell copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *  
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *  
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 */

plofbnf {
    plof_group = "include" "\(" /[A-Za-z0-9_\-\.]+/ white "\)" => {
        // get the file name
        null push1 2 index call
        this "filename" push2 memberset

        // try it with .psl
        ".psl" concat
        include
        // stack: content_of_.psl

        push0 null
        {
            // OK, it's not .psl, try .plof
            this parent "filename" member
            ".plof" concat push0
            include
            // stack: filename.plof content

            push0 null
            {
                // really not found. FIXME: better error
                "FILE NOT FOUND" push0 print throw
            } {} cmp
        } {} cmp
        // stack: content_of_file

        // OK, we got the content, parse it
        "top" push2 2 index parse

        pul_apply_funcwrap
    }

    plof_group = "rtInclude" "\(" /[A-Za-z0-9_\-\.]+/ white "\)" => {
        // include a file of /exactly this name/ at runtime
        push0 2 index
        { include "top" } concat
        push1 2 index concat
        { parse call } concat
        pul_apply_funcwrap
    }
};
